project_name: goreleaser-rpm

env:
  - GO111MODULE=on
  - CGO_ENABLED=1
  - DOCKER_CLI_EXPERIMENTAL=enabled
  - COSIGN_EXPERIMENTAL=true

# Prevents parallel builds from stepping on each others toes downloading modules
before:
  hooks:
    - go mod tidy
    - /bin/bash -c 'if [ -n "$(git --no-pager diff --exit-code go.mod go.sum)" ]; then exit 1; fi'


gomod:
  proxy: true

sboms:
  - artifacts: binary

nfpms:
  - id: hello
    package_name: hello
    file_name_template: "{{ .ConventionalFileName }}"
    maintainer: James <strong.james.e@gmail.com>
    builds:
      - linux
    description: |-
      Hello package install testing
    replacements:
      amd64: 64-bit
      386: 32-bit
      darwin: macOS
      linux: Tux
    license: Apache 2.0
    formats:
      - apk
      - deb
      - rpm
builds:
  - id: darwin-amd64
    binary: hello-darwin-amd64
    no_unique_dist_dir: true
    main: .
    flags:
      - -trimpath
    mod_timestamp: '{{ .CommitTimestamp }}'
    goos:
      - darwin
    goarch:
      - amd64
    ldflags:
      - "{{ .Env.LDFLAGS }}"

  - id: darwin-arm64
    binary: hello-darwin-arm64
    no_unique_dist_dir: true
    main: .
    flags:
      - -trimpath
    goos:
      - darwin
    goarch:
      - arm64
    ldflags:
      - "{{.Env.LDFLAGS}}"

  - id: windows-amd64
    binary: hello-windows-amd64
    no_unique_dist_dir: true
    main: .
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    goos:
      - windows
    goarch:
      - amd64
    ldflags:
      - -buildmode=exe
      - "{{ .Env.LDFLAGS }}"

  - id: linux
    binary: hello-linux-{{ .Arch }}
    no_unique_dist_dir: true
    main: .
    flags:
      - -trimpath
    mod_timestamp: '{{ .CommitTimestamp }}'
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - arm
      - s390x
      - ppc64le
    goarm:
      - '7'
    ldflags:
      - "{{ .Env.LDFLAGS }}"
    env:
      - CGO_ENABLED=0